{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/castro/Desktop/pataskill/frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/castro/Desktop/pataskill/frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar getNumberOfLines = require(\"./helpers\").getNumberOfLines;\nvar getUnfinishedLine = require(\"./helpers\").getUnfinishedLine;\nvar CodeNode = /*#__PURE__*/function () {\n  function CodeNode(generatedCode) {\n    _classCallCheck(this, CodeNode);\n    this.generatedCode = generatedCode;\n  }\n  _createClass(CodeNode, [{\n    key: \"clone\",\n    value: function clone() {\n      return new CodeNode(this.generatedCode);\n    }\n  }, {\n    key: \"getGeneratedCode\",\n    value: function getGeneratedCode() {\n      return this.generatedCode;\n    }\n  }, {\n    key: \"getMappings\",\n    value: function getMappings(mappingsContext) {\n      var lines = getNumberOfLines(this.generatedCode);\n      var mapping = Array(lines + 1).join(\";\");\n      if (lines > 0) {\n        mappingsContext.unfinishedGeneratedLine = getUnfinishedLine(this.generatedCode);\n        if (mappingsContext.unfinishedGeneratedLine > 0) {\n          return mapping + \"A\";\n        } else {\n          return mapping;\n        }\n      } else {\n        var prevUnfinished = mappingsContext.unfinishedGeneratedLine;\n        mappingsContext.unfinishedGeneratedLine += getUnfinishedLine(this.generatedCode);\n        if (prevUnfinished === 0 && mappingsContext.unfinishedGeneratedLine > 0) {\n          return \"A\";\n        } else {\n          return \"\";\n        }\n      }\n    }\n  }, {\n    key: \"addGeneratedCode\",\n    value: function addGeneratedCode(generatedCode) {\n      this.generatedCode += generatedCode;\n    }\n  }, {\n    key: \"mapGeneratedCode\",\n    value: function mapGeneratedCode(fn) {\n      var generatedCode = fn(this.generatedCode);\n      return new CodeNode(generatedCode);\n    }\n  }, {\n    key: \"getNormalizedNodes\",\n    value: function getNormalizedNodes() {\n      return [this];\n    }\n  }, {\n    key: \"merge\",\n    value: function merge(otherNode) {\n      if (otherNode instanceof CodeNode) {\n        this.generatedCode += otherNode.generatedCode;\n        return this;\n      }\n      return false;\n    }\n  }]);\n  return CodeNode;\n}();\nmodule.exports = CodeNode;","map":{"version":3,"names":["getNumberOfLines","require","getUnfinishedLine","CodeNode","generatedCode","mappingsContext","lines","mapping","Array","join","unfinishedGeneratedLine","prevUnfinished","fn","otherNode","module","exports"],"sources":["/home/castro/node_modules/source-list-map/lib/CodeNode.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst getNumberOfLines = require(\"./helpers\").getNumberOfLines;\nconst getUnfinishedLine = require(\"./helpers\").getUnfinishedLine;\n\nclass CodeNode {\n\tconstructor(generatedCode) {\n\t\tthis.generatedCode = generatedCode;\n\t}\n\n\tclone() {\n\t\treturn new CodeNode(this.generatedCode);\n\t}\n\n\tgetGeneratedCode() {\n\t\treturn this.generatedCode;\n\t}\n\n\tgetMappings(mappingsContext) {\n\t\tconst lines = getNumberOfLines(this.generatedCode);\n\t\tconst mapping = Array(lines+1).join(\";\");\n\t\tif(lines > 0) {\n\t\t\tmappingsContext.unfinishedGeneratedLine = getUnfinishedLine(this.generatedCode);\n\t\t\tif(mappingsContext.unfinishedGeneratedLine > 0) {\n\t\t\t\treturn mapping + \"A\";\n\t\t\t} else {\n\t\t\t\treturn mapping;\n\t\t\t}\n\t\t} else {\n\t\t\tconst prevUnfinished = mappingsContext.unfinishedGeneratedLine;\n\t\t\tmappingsContext.unfinishedGeneratedLine += getUnfinishedLine(this.generatedCode);\n\t\t\tif(prevUnfinished === 0 && mappingsContext.unfinishedGeneratedLine > 0) {\n\t\t\t\treturn \"A\";\n\t\t\t} else {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\taddGeneratedCode(generatedCode) {\n\t\tthis.generatedCode += generatedCode;\n\t}\n\n\tmapGeneratedCode(fn) {\n\t\tconst generatedCode = fn(this.generatedCode);\n\t\treturn new CodeNode(generatedCode);\n\t}\n\n\tgetNormalizedNodes() {\n\t\treturn [this];\n\t}\n\n\tmerge(otherNode) {\n\t\tif(otherNode instanceof CodeNode) {\n\t\t\tthis.generatedCode += otherNode.generatedCode;\n\t\t\treturn this;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nmodule.exports = CodeNode;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAAC;AAAA;AAEb,IAAMA,gBAAgB,GAAGC,OAAO,CAAC,WAAW,CAAC,CAACD,gBAAgB;AAC9D,IAAME,iBAAiB,GAAGD,OAAO,CAAC,WAAW,CAAC,CAACC,iBAAiB;AAAC,IAE3DC,QAAQ;EACb,kBAAYC,aAAa,EAAE;IAAA;IAC1B,IAAI,CAACA,aAAa,GAAGA,aAAa;EACnC;EAAC;IAAA;IAAA,OAED,iBAAQ;MACP,OAAO,IAAID,QAAQ,CAAC,IAAI,CAACC,aAAa,CAAC;IACxC;EAAC;IAAA;IAAA,OAED,4BAAmB;MAClB,OAAO,IAAI,CAACA,aAAa;IAC1B;EAAC;IAAA;IAAA,OAED,qBAAYC,eAAe,EAAE;MAC5B,IAAMC,KAAK,GAAGN,gBAAgB,CAAC,IAAI,CAACI,aAAa,CAAC;MAClD,IAAMG,OAAO,GAAGC,KAAK,CAACF,KAAK,GAAC,CAAC,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC;MACxC,IAAGH,KAAK,GAAG,CAAC,EAAE;QACbD,eAAe,CAACK,uBAAuB,GAAGR,iBAAiB,CAAC,IAAI,CAACE,aAAa,CAAC;QAC/E,IAAGC,eAAe,CAACK,uBAAuB,GAAG,CAAC,EAAE;UAC/C,OAAOH,OAAO,GAAG,GAAG;QACrB,CAAC,MAAM;UACN,OAAOA,OAAO;QACf;MACD,CAAC,MAAM;QACN,IAAMI,cAAc,GAAGN,eAAe,CAACK,uBAAuB;QAC9DL,eAAe,CAACK,uBAAuB,IAAIR,iBAAiB,CAAC,IAAI,CAACE,aAAa,CAAC;QAChF,IAAGO,cAAc,KAAK,CAAC,IAAIN,eAAe,CAACK,uBAAuB,GAAG,CAAC,EAAE;UACvE,OAAO,GAAG;QACX,CAAC,MAAM;UACN,OAAO,EAAE;QACV;MACD;IACD;EAAC;IAAA;IAAA,OAED,0BAAiBN,aAAa,EAAE;MAC/B,IAAI,CAACA,aAAa,IAAIA,aAAa;IACpC;EAAC;IAAA;IAAA,OAED,0BAAiBQ,EAAE,EAAE;MACpB,IAAMR,aAAa,GAAGQ,EAAE,CAAC,IAAI,CAACR,aAAa,CAAC;MAC5C,OAAO,IAAID,QAAQ,CAACC,aAAa,CAAC;IACnC;EAAC;IAAA;IAAA,OAED,8BAAqB;MACpB,OAAO,CAAC,IAAI,CAAC;IACd;EAAC;IAAA;IAAA,OAED,eAAMS,SAAS,EAAE;MAChB,IAAGA,SAAS,YAAYV,QAAQ,EAAE;QACjC,IAAI,CAACC,aAAa,IAAIS,SAAS,CAACT,aAAa;QAC7C,OAAO,IAAI;MACZ;MACA,OAAO,KAAK;IACb;EAAC;EAAA;AAAA;AAGFU,MAAM,CAACC,OAAO,GAAGZ,QAAQ"},"metadata":{},"sourceType":"script"}