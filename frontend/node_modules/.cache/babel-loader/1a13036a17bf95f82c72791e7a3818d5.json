{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/castro/Desktop/pataskill/frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/castro/Desktop/pataskill/frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar CodeNode = require(\"./CodeNode\");\nvar SourceNode = require(\"./SourceNode\");\nvar MappingsContext = require(\"./MappingsContext\");\nvar getNumberOfLines = require(\"./helpers\").getNumberOfLines;\nvar SourceListMap = /*#__PURE__*/function () {\n  function SourceListMap(generatedCode, source, originalSource) {\n    _classCallCheck(this, SourceListMap);\n    if (Array.isArray(generatedCode)) {\n      this.children = generatedCode;\n    } else {\n      this.children = [];\n      if (generatedCode || source) this.add(generatedCode, source, originalSource);\n    }\n  }\n  _createClass(SourceListMap, [{\n    key: \"add\",\n    value: function add(generatedCode, source, originalSource) {\n      if (typeof generatedCode === \"string\") {\n        if (source) {\n          this.children.push(new SourceNode(generatedCode, source, originalSource));\n        } else if (this.children.length > 0 && this.children[this.children.length - 1] instanceof CodeNode) {\n          this.children[this.children.length - 1].addGeneratedCode(generatedCode);\n        } else {\n          this.children.push(new CodeNode(generatedCode));\n        }\n      } else if (generatedCode.getMappings && generatedCode.getGeneratedCode) {\n        this.children.push(generatedCode);\n      } else if (generatedCode.children) {\n        generatedCode.children.forEach(function (sln) {\n          this.children.push(sln);\n        }, this);\n      } else {\n        throw new Error(\"Invalid arguments to SourceListMap.protfotype.add: Expected string, Node or SourceListMap\");\n      }\n    }\n  }, {\n    key: \"preprend\",\n    value: function preprend(generatedCode, source, originalSource) {\n      if (typeof generatedCode === \"string\") {\n        if (source) {\n          this.children.unshift(new SourceNode(generatedCode, source, originalSource));\n        } else if (this.children.length > 0 && this.children[this.children.length - 1].preprendGeneratedCode) {\n          this.children[this.children.length - 1].preprendGeneratedCode(generatedCode);\n        } else {\n          this.children.unshift(new CodeNode(generatedCode));\n        }\n      } else if (generatedCode.getMappings && generatedCode.getGeneratedCode) {\n        this.children.unshift(generatedCode);\n      } else if (generatedCode.children) {\n        generatedCode.children.slice().reverse().forEach(function (sln) {\n          this.children.unshift(sln);\n        }, this);\n      } else {\n        throw new Error(\"Invalid arguments to SourceListMap.protfotype.prerend: Expected string, Node or SourceListMap\");\n      }\n    }\n  }, {\n    key: \"mapGeneratedCode\",\n    value: function mapGeneratedCode(fn) {\n      var normalizedNodes = [];\n      this.children.forEach(function (sln) {\n        sln.getNormalizedNodes().forEach(function (newNode) {\n          normalizedNodes.push(newNode);\n        });\n      });\n      var optimizedNodes = [];\n      normalizedNodes.forEach(function (sln) {\n        sln = sln.mapGeneratedCode(fn);\n        if (optimizedNodes.length === 0) {\n          optimizedNodes.push(sln);\n        } else {\n          var last = optimizedNodes[optimizedNodes.length - 1];\n          var mergedNode = last.merge(sln);\n          if (mergedNode) {\n            optimizedNodes[optimizedNodes.length - 1] = mergedNode;\n          } else {\n            optimizedNodes.push(sln);\n          }\n        }\n      });\n      return new SourceListMap(optimizedNodes);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.children.map(function (sln) {\n        return sln.getGeneratedCode();\n      }).join(\"\");\n    }\n  }, {\n    key: \"toStringWithSourceMap\",\n    value: function toStringWithSourceMap(options) {\n      var mappingsContext = new MappingsContext();\n      var source = this.children.map(function (sln) {\n        return sln.getGeneratedCode();\n      }).join(\"\");\n      var mappings = this.children.map(function (sln) {\n        return sln.getMappings(mappingsContext);\n      }).join(\"\");\n      var arrays = mappingsContext.getArrays();\n      return {\n        source: source,\n        map: {\n          version: 3,\n          file: options && options.file,\n          sources: arrays.sources,\n          sourcesContent: mappingsContext.hasSourceContent ? arrays.sourcesContent : undefined,\n          mappings: mappings\n        }\n      };\n    }\n  }]);\n  return SourceListMap;\n}();\nmodule.exports = SourceListMap;","map":{"version":3,"names":["CodeNode","require","SourceNode","MappingsContext","getNumberOfLines","SourceListMap","generatedCode","source","originalSource","Array","isArray","children","add","push","length","addGeneratedCode","getMappings","getGeneratedCode","forEach","sln","Error","unshift","preprendGeneratedCode","slice","reverse","fn","normalizedNodes","getNormalizedNodes","newNode","optimizedNodes","mapGeneratedCode","last","mergedNode","merge","map","join","options","mappingsContext","mappings","arrays","getArrays","version","file","sources","sourcesContent","hasSourceContent","undefined","module","exports"],"sources":["/home/castro/node_modules/source-list-map/lib/SourceListMap.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst CodeNode = require(\"./CodeNode\");\nconst SourceNode = require(\"./SourceNode\");\nconst MappingsContext = require(\"./MappingsContext\");\nconst getNumberOfLines = require(\"./helpers\").getNumberOfLines;\n\nclass SourceListMap {\n\n\tconstructor(generatedCode, source, originalSource) {\n\t\tif(Array.isArray(generatedCode)) {\n\t\t\tthis.children = generatedCode;\n\t\t} else {\n\t\t\tthis.children = [];\n\t\t\tif(generatedCode || source)\n\t\t\t\tthis.add(generatedCode, source, originalSource);\n\t\t}\n\t}\n\n\tadd(generatedCode, source, originalSource) {\n\t\tif(typeof generatedCode === \"string\") {\n\t\t\tif(source) {\n\t\t\t\tthis.children.push(new SourceNode(generatedCode, source, originalSource));\n\t\t\t} else if(this.children.length > 0 && this.children[this.children.length - 1] instanceof CodeNode) {\n\t\t\t\tthis.children[this.children.length - 1].addGeneratedCode(generatedCode);\n\t\t\t} else {\n\t\t\t\tthis.children.push(new CodeNode(generatedCode));\n\t\t\t}\n\t\t} else if(generatedCode.getMappings && generatedCode.getGeneratedCode) {\n\t\t\tthis.children.push(generatedCode);\n\t\t} else if(generatedCode.children) {\n\t\t\tgeneratedCode.children.forEach(function(sln) {\n\t\t\t\tthis.children.push(sln);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid arguments to SourceListMap.protfotype.add: Expected string, Node or SourceListMap\");\n\t\t}\n\t};\n\n\tpreprend(generatedCode, source, originalSource) {\n\t\tif(typeof generatedCode === \"string\") {\n\t\t\tif(source) {\n\t\t\t\tthis.children.unshift(new SourceNode(generatedCode, source, originalSource));\n\t\t\t} else if(this.children.length > 0 && this.children[this.children.length - 1].preprendGeneratedCode) {\n\t\t\t\tthis.children[this.children.length - 1].preprendGeneratedCode(generatedCode);\n\t\t\t} else {\n\t\t\t\tthis.children.unshift(new CodeNode(generatedCode));\n\t\t\t}\n\t\t} else if(generatedCode.getMappings && generatedCode.getGeneratedCode) {\n\t\t\tthis.children.unshift(generatedCode);\n\t\t} else if(generatedCode.children) {\n\t\t\tgeneratedCode.children.slice().reverse().forEach(function(sln) {\n\t\t\t\tthis.children.unshift(sln);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid arguments to SourceListMap.protfotype.prerend: Expected string, Node or SourceListMap\");\n\t\t}\n\t};\n\n\tmapGeneratedCode(fn) {\n\t\tconst normalizedNodes = [];\n\t\tthis.children.forEach(function(sln) {\n\t\t\tsln.getNormalizedNodes().forEach(function(newNode) {\n\t\t\t\tnormalizedNodes.push(newNode);\n\t\t\t});\n\t\t});\n\t\tconst optimizedNodes = [];\n\t\tnormalizedNodes.forEach(function(sln) {\n\t\t\tsln = sln.mapGeneratedCode(fn);\n\t\t\tif(optimizedNodes.length === 0) {\n\t\t\t\toptimizedNodes.push(sln);\n\t\t\t} else {\n\t\t\t\tconst last = optimizedNodes[optimizedNodes.length - 1];\n\t\t\t\tconst mergedNode = last.merge(sln);\n\t\t\t\tif(mergedNode) {\n\t\t\t\t\toptimizedNodes[optimizedNodes.length - 1] = mergedNode;\n\t\t\t\t} else {\n\t\t\t\t\toptimizedNodes.push(sln);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn new SourceListMap(optimizedNodes);\n\t};\n\n\ttoString() {\n\t\treturn this.children.map(function(sln) {\n\t\t\treturn sln.getGeneratedCode();\n\t\t}).join(\"\");\n\t};\n\n\ttoStringWithSourceMap(options) {\n\t\tconst mappingsContext = new MappingsContext();\n\t\tconst source = this.children.map(function(sln) {\n\t\t\treturn sln.getGeneratedCode();\n\t\t}).join(\"\");\n\t\tconst mappings = this.children.map(function(sln) {\n\t\t\treturn sln.getMappings(mappingsContext);\n\t\t}).join(\"\");\n\t\tconst arrays = mappingsContext.getArrays();\n\t\treturn {\n\t\t\tsource,\n\t\t\tmap: {\n\t\t\t\tversion: 3,\n\t\t\t\tfile: options && options.file,\n\t\t\t\tsources: arrays.sources,\n\t\t\t\tsourcesContent: mappingsContext.hasSourceContent ? arrays.sourcesContent : undefined,\n\t\t\t\tmappings: mappings\n\t\t\t}\n\t\t};\n\t}\n}\n\nmodule.exports = SourceListMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}